services:

  caddy:
    container_name: caddy
    restart: unless-stopped
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.dev:/etc/caddy/Caddyfile
    depends_on:
      - webapp

  webapp:
    container_name: webapp
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        API_BASE_URL: ${API_BASE_URL}
    volumes:
      - .:/app
      - /app/.next
      - /app/node_modules
    env_file:
      - .env.development
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    restart: unless-stopped
    image: postgres:latest
    env_file:
      - .env.development
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./certs/postgres:/var/lib/postgresql/certs # Contains server.crt and server.key
      - ./certs/root.crt:/var/lib/postgresql/certs/root.crt # Root CA cert
      - ./scripts/init_mtls.sh:/docker-entrypoint-initdb.d/init_mtls.sh:ro
    command: [ "postgres", "-c", "ssl=on", "-c", "ssl_cert_file=/var/lib/postgresql/certs/server.crt", "-c", "ssl_key_file=/var/lib/postgresql/certs/server.key", "-c", "ssl_ca_file=/var/lib/postgresql/certs/root.crt", "-c", "logging_collector=on", "-c", "log_statement=all", "-c", "log_duration=on", "-c", "log_directory=log", "-c", "log_filename=postgresql.log" ]
    ports:
      - "5432:5432"

volumes:
  pg_data:
